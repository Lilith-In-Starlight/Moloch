[gd_scene load_steps=26 format=2]

[ext_resource path="res://Sprites/Menus/logo.png" type="Texture" id=1]
[ext_resource path="res://dpcomic.ttf" type="DynamicFontData" id=2]
[ext_resource path="res://MainMenu.gd" type="Script" id=3]
[ext_resource path="res://Sprites/Spells/Entities/FireOrb.png" type="Texture" id=4]
[ext_resource path="res://HUD/AchievementListElement.tscn" type="PackedScene" id=5]
[ext_resource path="res://Themes/Theme.tres" type="Theme" id=6]
[ext_resource path="res://Sprites/Menus/MenuBGSymbol.png" type="Texture" id=7]
[ext_resource path="res://Sprites/Menus/MenuBGLight.png" type="Texture" id=8]

[sub_resource type="Shader" id=13]
code = "shader_type canvas_item;

uniform float var = 1.0;

void fragment() {
	COLOR = textureLod(TEXTURE, UV, 1.0)*var;
}"

[sub_resource type="ShaderMaterial" id=14]
shader = SubResource( 13 )
shader_param/var = 1.0

[sub_resource type="CanvasItemMaterial" id=17]
blend_mode = 1

[sub_resource type="OpenSimplexNoise" id=18]

[sub_resource type="NoiseTexture" id=19]
width = 400
height = 225
noise = SubResource( 18 )

[sub_resource type="Shader" id=10]
code = "shader_type canvas_item;

void fragment() {
	COLOR = textureLod(SCREEN_TEXTURE, SCREEN_UV, 2.0);
}"

[sub_resource type="ShaderMaterial" id=11]
shader = SubResource( 10 )

[sub_resource type="DynamicFont" id=9]
size = 13
font_data = ExtResource( 2 )

[sub_resource type="Animation" id=1]
resource_name = "Fadein"
length = 1.1
tracks/0/type = "value"
tracks/0/path = NodePath("Thing:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Thing:visible")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ true, true ]
}

[sub_resource type="Animation" id=2]
resource_name = "Fadeout"
tracks/0/type = "value"
tracks/0/path = NodePath("Thing:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}

[sub_resource type="Animation" id=3]
resource_name = "License"
length = 2.0
tracks/0/type = "value"
tracks/0/path = NodePath("Image:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5, 1.4, 2 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Image:rect_position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Image:visible")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ true, false ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Thing:modulate")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 1.4, 2 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("Thing:visible")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ true, false ]
}

[sub_resource type="DynamicFont" id=5]
size = 12
font_data = ExtResource( 2 )

[sub_resource type="StyleBoxFlat" id=4]
content_margin_left = 5.0
content_margin_right = 5.0
content_margin_top = 5.0
content_margin_bottom = 5.0
bg_color = Color( 1, 0.627451, 0, 1 )
border_width_left = 2
border_width_top = 2
border_width_right = 2
border_width_bottom = 2
border_color = Color( 0.458824, 0.215686, 0, 1 )
corner_radius_top_left = 5
corner_radius_top_right = 2
corner_radius_bottom_right = 5
corner_radius_bottom_left = 2
anti_aliasing = false

[sub_resource type="StyleBoxFlat" id=6]
bg_color = Color( 0, 0, 0, 1 )

[sub_resource type="DynamicFont" id=7]
size = 15
font_data = ExtResource( 2 )

[sub_resource type="DynamicFont" id=8]
size = 40
font_data = ExtResource( 2 )

[sub_resource type="Environment" id=12]
background_mode = 4
tonemap_mode = 4
auto_exposure_min_luma = 0.35
auto_exposure_max_luma = 7.09
auto_exposure_speed = 64.0
glow_blend_mode = 1

[node name="MainMenu" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0
script = ExtResource( 3 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Symbol" type="TextureRect" parent="."]
material = SubResource( 14 )
margin_right = 400.0
margin_bottom = 225.0
texture = ExtResource( 7 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="SymbolGlow" type="TextureRect" parent="Symbol"]
modulate = Color( 1, 1, 1, 0.0980392 )
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -117.5
margin_top = -130.0
margin_right = 117.5
margin_bottom = 130.0
texture = ExtResource( 8 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Smoke" type="TextureRect" parent="Symbol"]
modulate = Color( 1, 0.870588, 0.803922, 0.145098 )
material = SubResource( 17 )
anchor_right = 1.0
anchor_bottom = 1.0
texture = SubResource( 19 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Blur" type="TextureRect" parent="Symbol"]
material = SubResource( 11 )
margin_right = 400.0
margin_bottom = 225.0
texture = ExtResource( 7 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label" type="Label" parent="."]
margin_right = 40.0
margin_bottom = 14.0
theme = ExtResource( 6 )
custom_fonts/font = SubResource( 9 )
text = "0.11.0"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Animations" type="AnimationPlayer" parent="."]
anims/Fadein = SubResource( 1 )
anims/Fadeout = SubResource( 2 )
anims/License = SubResource( 3 )

[node name="MainMenu" type="Control" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="Logo" type="TextureRect" parent="MainMenu"]
anchor_left = 0.5
anchor_right = 0.5
margin_left = -62.5
margin_right = 62.5
margin_bottom = 125.0
size_flags_horizontal = 0
size_flags_vertical = 0
texture = ExtResource( 1 )
expand = true
stretch_mode = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="LineEdit" type="LineEdit" parent="MainMenu"]
anchor_left = 0.32
anchor_top = 0.867
anchor_right = 0.682
anchor_bottom = 0.964
margin_left = -20.0
margin_top = -0.0749964
margin_right = 20.2
margin_bottom = 0.100003
focus_mode = 1
custom_colors/font_color = Color( 0.458824, 0.215686, 0, 1 )
custom_fonts/font = SubResource( 5 )
custom_styles/normal = SubResource( 4 )
align = 1
placeholder_text = "Leave empty for random seed"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="MenuContainer" type="VBoxContainer" parent="."]
visible = false
anchor_left = 0.5
anchor_right = 0.5
anchor_bottom = 1.0
margin_top = 105.0
margin_bottom = -38.0
grow_horizontal = 2
custom_constants/separation = -6

[node name="Achievements" type="VBoxContainer" parent="."]
visible = false
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 10.0
margin_top = 10.0
margin_right = -10.0
margin_bottom = -10.0
custom_constants/separation = 34
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Achievement2" parent="Achievements" instance=ExtResource( 5 )]
achievement = "fun2"

[node name="Achievement3" parent="Achievements" instance=ExtResource( 5 )]
margin_top = 34.0
margin_bottom = 34.0
achievement = "first_of_many"

[node name="Achievement" parent="Achievements" instance=ExtResource( 5 )]
margin_top = 68.0
margin_bottom = 68.0
achievement = "fun1"

[node name="Achievement4" parent="Achievements" instance=ExtResource( 5 )]
margin_top = 102.0
margin_bottom = 102.0
achievement = "oof_ouch"

[node name="Achievement5" parent="Achievements" instance=ExtResource( 5 )]
margin_top = 102.0
margin_bottom = 102.0
achievement = "test"

[node name="ControlSettings" type="VBoxContainer" parent="."]
visible = false
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 10.0
margin_top = 10.0
margin_right = -10.0
margin_bottom = -10.0
custom_constants/separation = 34
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Ball" type="TextureRect" parent="."]
margin_left = 250.0
margin_top = 137.0
margin_right = 258.0
margin_bottom = 145.0
texture = ExtResource( 4 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Thing" type="Panel" parent="."]
visible = false
anchor_right = 1.0
anchor_bottom = 1.0
custom_styles/panel = SubResource( 6 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Image" type="Control" parent="."]
visible = false
modulate = Color( 1, 1, 1, 0 )
anchor_right = 1.0
anchor_bottom = 1.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="MadeWith" type="Label" parent="Image"]
anchor_left = 0.5
anchor_right = 0.5
anchor_bottom = 1.0
margin_left = -49.0
margin_top = 203.0
margin_right = 50.0
margin_bottom = -8.0
custom_fonts/font = SubResource( 7 )
text = "Made With Godot"
align = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Sadblock" type="Label" parent="Image"]
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -212.0
margin_top = -18.5
margin_right = 212.0
margin_bottom = 18.5
custom_fonts/font = SubResource( 8 )
text = "SadBlockGames"
align = 1
autowrap = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource( 12 )

[connection signal="animation_finished" from="Animations" to="." method="_on_animation_finished"]
